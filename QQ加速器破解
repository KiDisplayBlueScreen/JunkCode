#include "stdafx.h"
#include <Windows.h>
#include <iostream>
#include <TlHelp32.h>
using namespace std;
BOOL ElevateDebugPrivileges();
LPCTSTR QQAccelerator =L"QMProxyAcceler.exe";
HANDLE GetProcessHandleByName(TCHAR* Name);
int main()
{

	ElevateDebugPrivileges();
	HANDLE hQQAccelerator = GetProcessHandleByName((LPWSTR)QQAccelerator);
	DWORD LastError = GetLastError();
	DWORD OldProtect;
	BYTE Patch[1] = { 0 };
	if (hQQAccelerator == 0)
	{
		printf("Get QQAccelerator Handle Fail! Please Check If you have ran QQAccelerator or Run This Program As Administrator. \n");
		printf("Error Code:   0x%08X  \n", LastError);
		PAUSE;
		return 0;
	}
	if  (VirtualProtectEx(hQQAccelerator, (LPVOID)0x01291000, 0x9E000, PAGE_EXECUTE_READWRITE, &OldProtect)==0)
	{
		LastError = GetLastError();
		printf("Page Protect Change Fail! Please Check If you have ran QQAccelerator or Run This Program As Administrator. \n");
		printf("Error Code:   0x%08X  \n", LastError);
		PAUSE;
	}

	if (WriteProcessMemory(hQQAccelerator,(PVOID)0x12A8E7C,(LPVOID)Patch,1,0)==0)
	{
		LastError = GetLastError();
		printf("Patch Fail! Please Check If you have ran QQAccelerator or Run This Program As Administrator. \n");
		printf("Error Code:   0x%08X  \n", LastError);
		PAUSE;
	}
	printf("Patch Success!  \n");
	VirtualProtectEx(hQQAccelerator, (LPVOID)0x01291000, 0x9E000, OldProtect, &OldProtect);

	CloseHandle(hQQAccelerator);
	PAUSE;
    return 0;
}
HANDLE GetProcessHandleByName(TCHAR* Name)
{
	ElevateDebugPrivileges();
	DWORD Pid = 0;
	HANDLE Snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
	PROCESSENTRY32 Process;
	ZeroMemory(&Process, sizeof(Process));
	Process.dwSize = sizeof(Process);
	if (Process32First(Snapshot, &Process))
	{
		do
		{
			if (wcscmp(Process.szExeFile, Name) == 0)
			{
				Pid = Process.th32ProcessID;
				break;
			}
		} while (Process32Next(Snapshot, &Process));
	}
	CloseHandle(Snapshot);

	if (Pid != 0)
	{
		HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, Pid);
		return hProcess;
	}
	return NULL;
}
